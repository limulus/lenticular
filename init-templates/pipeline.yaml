AWSTemplateFormatVersion: "2010-09-09"
Description: '${productName} Build Pipeline'


# -------------------------------------------------------------------
# Template Parameters
# -------------------------------------------------------------------

Parameters:
  GitHubOauthToken:
    Type: String
    NoEcho: true


Resources:

# -------------------------------------------------------------------
# Resources: CodePipeline for ${productName}
# -------------------------------------------------------------------

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      Name: !Lenticular::ProductName
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      Stages:

        - Name: FetchSourceCode
          Actions:
            - Name: FetchSourceCode
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Lenticular::ConfigValue githubRepoOwner
                Repo: !Lenticular::ConfigValue githubRepoName
                Branch: !Lenticular::ConfigValue githubRepoBranch
                OAuthToken: !Ref GitHubOauthToken
              InputArtifacts: []
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: BuildProductArtifacts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: ProductArtifacts
              Configuration:
                ProjectName: !Ref ArtifactBuilder
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: ProductArtifacts
              Configuration:
                StackName: !Lenticular::ProductName
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Lenticular::ResourceName 'change-set'
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: ProductArtifacts::infrastructure.yaml
                RoleArn: !GetAtt CloudFormationRole.Arn
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: !Lenticular::ProductName
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: !Lenticular::ResourceName 'change-set'
                RoleArn: !GetAtt CloudFormationRole.Arn
              RunOrder: 2

  ArtifactBuilder:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:6.3.1
        EnvironmentVariables:
          - Name: LAMBDA_BUCKET
            Value: !Ref LambdaBucket
      Name: !Lenticular::ResourceName ArtifactBuilder
      ServiceRole: !Ref ArtifactBuilderRole
      Source:
        Type: CODEPIPELINE


# -------------------------------------------------------------------
# Resources: S3 Bucket for Pipeline Artifacts
# -------------------------------------------------------------------

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Lenticular::ResourceNameWithRegion artifacts
      VersioningConfiguration:
        Status: Enabled
      AccessControl: BucketOwnerFullControl


# -------------------------------------------------------------------
# Resources: S3 Bucket for Lambda Function Archives
# -------------------------------------------------------------------

  LambdaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', [!<!Lenticular::ProductName>, !Ref 'AWS::Region', 'lambdas']]
      VersioningConfiguration:
        Status: Enabled
      AccessControl: BucketOwnerFullControl


# -------------------------------------------------------------------
# Resources: IAM Roles
# -------------------------------------------------------------------

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Lenticular::ResourceNameWithRegion pipleine
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: pipeline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: !Sub '$${ArtifactBucket.Arn}/*'
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
              - Effect: Allow
                Resource: '*'
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole
              - Effect: Allow
                Resource: !GetAtt ArtifactBuilder.Arn
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
              # - Effect: Allow
              #   Resource: !GetAtt SourceCodeRepository.Arn
              #   Action:
              #     - codecommit:CancelUploadArchive
              #     - codecommit:GetBranch
              #     - codecommit:GetCommit
              #     - codecommit:GetUploadArchiveStatus
              #     - codecommit:UploadArchive


  ArtifactBuilderRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Lenticular::ResourceNameWithRegion artifact-builder
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: artifact-builder
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub '$${ArtifactBucket.Arn}/*'
                  - !Sub '$${LambdaBucket.Arn}/*'
                Action:
                  - 's3:GetObject*'
                  - 's3:PutObject*'
              - Effect: Allow
                Resource: !Sub 'arn:aws:logs:$${AWS::Region}:$${AWS::AccountId}:*'
                Action:
                  - 'logs:CreateLog*'
                  - 'logs:PutLog*'

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Lenticular::ResourceNameWithRegion cloudformation
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess


# -------------------------------------------------------------------
# Outputs
# -------------------------------------------------------------------

Outputs:
  pipelineId:
    Value: !Ref 'Pipeline'
